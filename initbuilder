#!/bin/bash

CONTAINER_NAME=osg-build
IMAGE=opensciencegrid/osg-build
MOUNT_POINT=/home/build/work

die () {
    echo "$@" 1>&2
    exit 1
}

if [[ $# -ne 1 ]]; then
    echo "Usage: $(basename "$0") <work-dir>"
    echo
    echo "work-dir is the name of a directory above your repository checkouts."
    echo "For example, if you did an svn checkout of native/redhat into ~/work/redhat"
    echo "then you can specify either ~/work or ~/redhat. (Or just plain ~ if you want"
    echo "to mount your entire home directory into the container.)"
    echo
    echo "Whichever you choose, You need to make sure that your .svn or .git directory"
    echo "or directories for the package(s) you want to build are inside work-dir."
    echo
    echo "The directory will be mounted under $MOUNT_POINT"
    exit 2
fi

[[ -r $HOME/.globus/usercert.pem ]] || die "~/.globus/usercert.pem not found or not readable"
[[ -r $HOME/.globus/userkey.pem ]] || die "~/.globus/userkey.pem not found or not readable"
[[ -L $HOME/.globus/usercert.pem ]] && die "~/.globus/usercert.pem is a symlink; turn it into a regular file"
[[ -L $HOME/.globus/userkey.pem ]] && die "~/.globus/userkey.pem is a symlink; turn it into a regular file"

work_dir=${1?}  # should never actually fail

[[ -x $work_dir ]] || die "$work_dir not found or not readable"

work_dir=$(cd "$work_dir" && pwd -P) || die "error getting absolute path of $work_dir"

set -eu

hash=$(docker ps -a --latest --quiet --filter name=$CONTAINER_NAME)

if [[ -z $hash ]]; then
    echo -n 'creating docker container: '
    docker create -it \
                      --volume "$HOME/.globus":/home/build/.globus \
                      --volume "$work_dir":"$MOUNT_POINT" \
                      --name $CONTAINER_NAME \
                      $IMAGE  && \
        sleep 2
else
    echo "docker container \`$CONTAINER_NAME' already exists"
    echo "Ignoring <work-dir>"
fi

docker start $CONTAINER_NAME
sleep 2

if [[ -z $hash ]]; then
    docker exec $CONTAINER_NAME \
        bash -c "echo '$work_dir' > /home/build/.work_dir"
fi
